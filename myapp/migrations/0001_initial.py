# Generated by Django 5.1.6 on 2025-03-22 07:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('achievement_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('logo', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('campus_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('card_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('rarity', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('daily', 'daily'), ('weekly', 'weekly'), ('location', 'location'), ('group', 'group'), ('bus', 'bus'), ('cycle', 'cycle'), ('walk', 'walk'), ('recycling', 'recycling'), ('water', 'water'), ('electric', 'electric'), ('streatham', 'streatham'), ('st lukes', 'st lukes')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trivia',
            fields=[
                ('trivia_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Checkpoint',
            fields=[
                ('checkpoint_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('bus', 'bus'), ('cycling', 'cycling'), ('recycle', 'recycle')], default='bus', max_length=10)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.campus')),
            ],
        ),
        migrations.CreateModel(
            name='Gamekeeper',
            fields=[
                ('gamekeeper_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=200)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gamekeepers', to='myapp.campus')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100)),
                ('points', models.IntegerField(default=0)),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.campus')),
                ('deck', models.ManyToManyField(blank=True, to='myapp.card')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_frame', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('title', models.CharField(max_length=100)),
                ('count', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('tags', models.ManyToManyField(blank=True, to='myapp.tag')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.achievement')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.player')),
            ],
            options={
                'unique_together': {('player', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_time', models.DateTimeField(auto_now_add=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.card')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.player')),
            ],
            options={
                'unique_together': {('player', 'card', 'purchase_time')},
            },
        ),
        migrations.CreateModel(
            name='PlayerTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.player')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.task')),
            ],
            options={
                'unique_together': {('player', 'task')},
            },
        ),
        migrations.CreateModel(
            name='GamekeeperTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gamekeeper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.gamekeeper')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.task')),
            ],
            options={
                'unique_together': {('gamekeeper', 'task')},
            },
        ),
        migrations.CreateModel(
            name='TaskCheckpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.checkpoint')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.task')),
            ],
            options={
                'unique_together': {('task', 'checkpoint')},
            },
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visited_time', models.DateTimeField(auto_now_add=True)),
                ('checkpoint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.checkpoint')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.player')),
            ],
            options={
                'unique_together': {('player', 'checkpoint', 'visited_time')},
            },
        ),
    ]
